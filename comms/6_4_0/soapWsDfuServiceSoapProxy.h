/* soapWsDfuServiceSoapProxy.h
   Generated by gSOAP 2.7.15 from Services.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapWsDfuServiceSoapProxy_H
#define soapWsDfuServiceSoapProxy_H
#include "soapH.h"

class SOAP_CMAC WsDfuServiceSoapProxy : public soap
{ public:
	/// Endpoint URL of service 'WsDfuServiceSoapProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	WsDfuServiceSoapProxy();
	/// Constructor with copy of another engine state
	WsDfuServiceSoapProxy(const struct soap&);
	/// Constructor with engine input+output mode control
	WsDfuServiceSoapProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	WsDfuServiceSoapProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~WsDfuServiceSoapProxy();
	/// Initializer used by constructors
	virtual	void WsDfuServiceSoapProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'Add' (returns error code or SOAP_OK)
	virtual	int Add(_ns3__AddRequest *ns3__AddRequest, _ns3__AddResponse *ns3__AddResponse);

	/// Web service operation 'AddRemote' (returns error code or SOAP_OK)
	virtual	int AddRemote(_ns3__AddRemoteRequest *ns3__AddRemoteRequest, _ns3__AddRemoteResponse *ns3__AddRemoteResponse);

	/// Web service operation 'AddtoSuperfile' (returns error code or SOAP_OK)
	virtual	int AddtoSuperfile(_ns3__AddtoSuperfileRequest *ns3__AddtoSuperfileRequest, _ns3__AddtoSuperfileResponse *ns3__AddtoSuperfileResponse);

	/// Web service operation 'DFUArrayAction' (returns error code or SOAP_OK)
	virtual	int DFUArrayAction(_ns3__DFUArrayActionRequest *ns3__DFUArrayActionRequest, _ns3__DFUArrayActionResponse *ns3__DFUArrayActionResponse);

	/// Web service operation 'DFUBrowseData' (returns error code or SOAP_OK)
	virtual	int DFUBrowseData(_ns3__DFUBrowseDataRequest *ns3__DFUBrowseDataRequest, _ns3__DFUBrowseDataResponse *ns3__DFUBrowseDataResponse);

	/// Web service operation 'DFUDefFile' (returns error code or SOAP_OK)
	virtual	int DFUDefFile(_ns3__DFUDefFileRequest *ns3__DFUDefFileRequest, _ns3__DFUDefFileResponse *ns3__DFUDefFileResponse);

	/// Web service operation 'DFUFileView' (returns error code or SOAP_OK)
	virtual	int DFUFileView(_ns3__DFUFileViewRequest *ns3__DFUFileViewRequest, _ns3__DFUFileViewResponse *ns3__DFUFileViewResponse);

	/// Web service operation 'DFUGetDataColumns' (returns error code or SOAP_OK)
	virtual	int DFUGetDataColumns(_ns3__DFUGetDataColumnsRequest *ns3__DFUGetDataColumnsRequest, _ns3__DFUGetDataColumnsResponse *ns3__DFUGetDataColumnsResponse);

	/// Web service operation 'DFUGetFileMetaData' (returns error code or SOAP_OK)
	virtual	int DFUGetFileMetaData(_ns3__DFUGetFileMetaDataRequest *ns3__DFUGetFileMetaDataRequest, _ns3__DFUGetFileMetaDataResponse *ns3__DFUGetFileMetaDataResponse);

	/// Web service operation 'DFUInfo' (returns error code or SOAP_OK)
	virtual	int DFUInfo(_ns3__DFUInfoRequest *ns3__DFUInfoRequest, _ns3__DFUInfoResponse *ns3__DFUInfoResponse);

	/// Web service operation 'DFUQuery' (returns error code or SOAP_OK)
	virtual	int DFUQuery(_ns3__DFUQueryRequest *ns3__DFUQueryRequest, _ns3__DFUQueryResponse *ns3__DFUQueryResponse);

	/// Web service operation 'DFUSearch' (returns error code or SOAP_OK)
	virtual	int DFUSearch(_ns3__DFUSearchRequest *ns3__DFUSearchRequest, _ns3__DFUSearchResponse *ns3__DFUSearchResponse);

	/// Web service operation 'DFUSearchData' (returns error code or SOAP_OK)
	virtual	int DFUSearchData(_ns3__DFUSearchDataRequest *ns3__DFUSearchDataRequest, _ns3__DFUSearchDataResponse *ns3__DFUSearchDataResponse);

	/// Web service operation 'DFUSpace' (returns error code or SOAP_OK)
	virtual	int DFUSpace(_ns3__DFUSpaceRequest *ns3__DFUSpaceRequest, _ns3__DFUSpaceResponse *ns3__DFUSpaceResponse);

	/// Web service operation 'EraseHistory' (returns error code or SOAP_OK)
	virtual	int EraseHistory(_ns3__EraseHistoryRequest *ns3__EraseHistoryRequest, _ns3__EraseHistoryResponse *ns3__EraseHistoryResponse);

	/// Web service operation 'ListHistory' (returns error code or SOAP_OK)
	virtual	int ListHistory(_ns3__ListHistoryRequest *ns3__ListHistoryRequest, _ns3__ListHistoryResponse *ns3__ListHistoryResponse);

	/// Web service operation 'Savexml' (returns error code or SOAP_OK)
	virtual	int Savexml(_ns3__SavexmlRequest *ns3__SavexmlRequest, _ns3__SavexmlResponse *ns3__SavexmlResponse);

	/// Web service operation 'SuperfileAction' (returns error code or SOAP_OK)
	virtual	int SuperfileAction(_ns3__SuperfileActionRequest *ns3__SuperfileActionRequest, _ns3__SuperfileActionResponse *ns3__SuperfileActionResponse);

	/// Web service operation 'SuperfileList' (returns error code or SOAP_OK)
	virtual	int SuperfileList(_ns3__SuperfileListRequest *ns3__SuperfileListRequest, _ns3__SuperfileListResponse *ns3__SuperfileListResponse);
};
#endif
