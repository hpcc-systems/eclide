/* soapWsTopologyServiceSoapProxy.cpp
   Generated by gSOAP 2.7.15 from Services.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "soapWsTopologyServiceSoapProxy.h"

WsTopologyServiceSoapProxy::WsTopologyServiceSoapProxy()
{	WsTopologyServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

WsTopologyServiceSoapProxy::WsTopologyServiceSoapProxy(const struct soap &_soap) :soap(_soap)
{ }

WsTopologyServiceSoapProxy::WsTopologyServiceSoapProxy(soap_mode iomode)
{	WsTopologyServiceSoapProxy_init(iomode, iomode);
}

WsTopologyServiceSoapProxy::WsTopologyServiceSoapProxy(soap_mode imode, soap_mode omode)
{	WsTopologyServiceSoapProxy_init(imode, omode);
}

void WsTopologyServiceSoapProxy::WsTopologyServiceSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://webservices.seisint.com/ws_account", NULL, NULL},
	{"ns2", "http://webservices.seisint.com/WsAttributes", NULL, NULL},
	{"ns3", "http://webservices.seisint.com/WsDfu", NULL, NULL},
	{"ns4", "http://webservices.seisint.com/WsSMC", NULL, NULL},
	{"ns5", "urn:hpccsystems:ws:wstopology", NULL, NULL},
	{"ns6", "http://webservices.seisint.com/WsWorkunits", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	if (!this->namespaces)
		this->namespaces = namespaces;
}

WsTopologyServiceSoapProxy::~WsTopologyServiceSoapProxy()
{ }

void WsTopologyServiceSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void WsTopologyServiceSoapProxy::soap_noheader()
{	header = NULL;
}

const SOAP_ENV__Fault *WsTopologyServiceSoapProxy::soap_fault()
{	return this->fault;
}

const char *WsTopologyServiceSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *WsTopologyServiceSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int WsTopologyServiceSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

void WsTopologyServiceSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void WsTopologyServiceSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *WsTopologyServiceSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int WsTopologyServiceSoapProxy::SystemLog(_ns5__SystemLogRequest *ns5__SystemLogRequest, _ns5__SystemLogResponse *ns5__SystemLogResponse)
{	struct soap *soap = this;
	struct __ns5__SystemLog soap_tmp___ns5__SystemLog;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/SystemLog?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__SystemLog.ns5__SystemLogRequest = ns5__SystemLogRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__SystemLog(soap, &soap_tmp___ns5__SystemLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__SystemLog(soap, &soap_tmp___ns5__SystemLog, "-ns5:SystemLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__SystemLog(soap, &soap_tmp___ns5__SystemLog, "-ns5:SystemLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SystemLogResponse)
		return soap_closesock(soap);
	ns5__SystemLogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SystemLogResponse->soap_get(soap, "ns5:SystemLogResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpClusterInfo(_ns5__TpClusterInfoRequest *ns5__TpClusterInfoRequest, _ns5__TpClusterInfoResponse *ns5__TpClusterInfoResponse)
{	struct soap *soap = this;
	struct __ns5__TpClusterInfo soap_tmp___ns5__TpClusterInfo;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpClusterInfo?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpClusterInfo.ns5__TpClusterInfoRequest = ns5__TpClusterInfoRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpClusterInfo(soap, &soap_tmp___ns5__TpClusterInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpClusterInfo(soap, &soap_tmp___ns5__TpClusterInfo, "-ns5:TpClusterInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpClusterInfo(soap, &soap_tmp___ns5__TpClusterInfo, "-ns5:TpClusterInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpClusterInfoResponse)
		return soap_closesock(soap);
	ns5__TpClusterInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpClusterInfoResponse->soap_get(soap, "ns5:TpClusterInfoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpClusterQuery(_ns5__TpClusterQueryRequest *ns5__TpClusterQueryRequest, _ns5__TpClusterQueryResponse *ns5__TpClusterQueryResponse)
{	struct soap *soap = this;
	struct __ns5__TpClusterQuery soap_tmp___ns5__TpClusterQuery;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpClusterQuery?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpClusterQuery.ns5__TpClusterQueryRequest = ns5__TpClusterQueryRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpClusterQuery(soap, &soap_tmp___ns5__TpClusterQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpClusterQuery(soap, &soap_tmp___ns5__TpClusterQuery, "-ns5:TpClusterQuery", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpClusterQuery(soap, &soap_tmp___ns5__TpClusterQuery, "-ns5:TpClusterQuery", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpClusterQueryResponse)
		return soap_closesock(soap);
	ns5__TpClusterQueryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpClusterQueryResponse->soap_get(soap, "ns5:TpClusterQueryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpGetComponentFile(_ns5__TpGetComponentFileRequest *ns5__TpGetComponentFileRequest, _ns5__TpGetComponentFileResponse *ns5__TpGetComponentFileResponse)
{	struct soap *soap = this;
	struct __ns5__TpGetComponentFile soap_tmp___ns5__TpGetComponentFile;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpGetComponentFile?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpGetComponentFile.ns5__TpGetComponentFileRequest = ns5__TpGetComponentFileRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpGetComponentFile(soap, &soap_tmp___ns5__TpGetComponentFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpGetComponentFile(soap, &soap_tmp___ns5__TpGetComponentFile, "-ns5:TpGetComponentFile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpGetComponentFile(soap, &soap_tmp___ns5__TpGetComponentFile, "-ns5:TpGetComponentFile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpGetComponentFileResponse)
		return soap_closesock(soap);
	ns5__TpGetComponentFileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpGetComponentFileResponse->soap_get(soap, "ns5:TpGetComponentFileResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpGroupQuery(_ns5__TpGroupQueryRequest *ns5__TpGroupQueryRequest, _ns5__TpGroupQueryResponse *ns5__TpGroupQueryResponse)
{	struct soap *soap = this;
	struct __ns5__TpGroupQuery soap_tmp___ns5__TpGroupQuery;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpGroupQuery?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpGroupQuery.ns5__TpGroupQueryRequest = ns5__TpGroupQueryRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpGroupQuery(soap, &soap_tmp___ns5__TpGroupQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpGroupQuery(soap, &soap_tmp___ns5__TpGroupQuery, "-ns5:TpGroupQuery", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpGroupQuery(soap, &soap_tmp___ns5__TpGroupQuery, "-ns5:TpGroupQuery", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpGroupQueryResponse)
		return soap_closesock(soap);
	ns5__TpGroupQueryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpGroupQueryResponse->soap_get(soap, "ns5:TpGroupQueryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpLogFile(_ns5__TpLogFileRequest *ns5__TpLogFileRequest, _ns5__TpLogFileResponse *ns5__TpLogFileResponse)
{	struct soap *soap = this;
	struct __ns5__TpLogFile soap_tmp___ns5__TpLogFile;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpLogFile?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpLogFile.ns5__TpLogFileRequest = ns5__TpLogFileRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpLogFile(soap, &soap_tmp___ns5__TpLogFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpLogFile(soap, &soap_tmp___ns5__TpLogFile, "-ns5:TpLogFile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpLogFile(soap, &soap_tmp___ns5__TpLogFile, "-ns5:TpLogFile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpLogFileResponse)
		return soap_closesock(soap);
	ns5__TpLogFileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpLogFileResponse->soap_get(soap, "ns5:TpLogFileResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpLogFileDisplay(_ns5__TpLogFileRequest *ns5__TpLogFileRequest, _ns5__TpLogFileResponse *ns5__TpLogFileResponse)
{	struct soap *soap = this;
	struct __ns5__TpLogFileDisplay soap_tmp___ns5__TpLogFileDisplay;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpLogFileDisplay?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpLogFileDisplay.ns5__TpLogFileRequest = ns5__TpLogFileRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpLogFileDisplay(soap, &soap_tmp___ns5__TpLogFileDisplay);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpLogFileDisplay(soap, &soap_tmp___ns5__TpLogFileDisplay, "-ns5:TpLogFileDisplay", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpLogFileDisplay(soap, &soap_tmp___ns5__TpLogFileDisplay, "-ns5:TpLogFileDisplay", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpLogFileResponse)
		return soap_closesock(soap);
	ns5__TpLogFileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpLogFileResponse->soap_get(soap, "ns5:TpLogFileResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpLogicalClusterQuery(_ns5__TpLogicalClusterQueryRequest *ns5__TpLogicalClusterQueryRequest, _ns5__TpLogicalClusterQueryResponse *ns5__TpLogicalClusterQueryResponse)
{	struct soap *soap = this;
	struct __ns5__TpLogicalClusterQuery soap_tmp___ns5__TpLogicalClusterQuery;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpLogicalClusterQuery?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpLogicalClusterQuery.ns5__TpLogicalClusterQueryRequest = ns5__TpLogicalClusterQueryRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpLogicalClusterQuery(soap, &soap_tmp___ns5__TpLogicalClusterQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpLogicalClusterQuery(soap, &soap_tmp___ns5__TpLogicalClusterQuery, "-ns5:TpLogicalClusterQuery", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpLogicalClusterQuery(soap, &soap_tmp___ns5__TpLogicalClusterQuery, "-ns5:TpLogicalClusterQuery", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpLogicalClusterQueryResponse)
		return soap_closesock(soap);
	ns5__TpLogicalClusterQueryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpLogicalClusterQueryResponse->soap_get(soap, "ns5:TpLogicalClusterQueryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpMachineQuery(_ns5__TpMachineQueryRequest *ns5__TpMachineQueryRequest, _ns5__TpMachineQueryResponse *ns5__TpMachineQueryResponse)
{	struct soap *soap = this;
	struct __ns5__TpMachineQuery soap_tmp___ns5__TpMachineQuery;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpMachineQuery?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpMachineQuery.ns5__TpMachineQueryRequest = ns5__TpMachineQueryRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpMachineQuery(soap, &soap_tmp___ns5__TpMachineQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpMachineQuery(soap, &soap_tmp___ns5__TpMachineQuery, "-ns5:TpMachineQuery", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpMachineQuery(soap, &soap_tmp___ns5__TpMachineQuery, "-ns5:TpMachineQuery", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpMachineQueryResponse)
		return soap_closesock(soap);
	ns5__TpMachineQueryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpMachineQueryResponse->soap_get(soap, "ns5:TpMachineQueryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpServiceQuery(_ns5__TpServiceQueryRequest *ns5__TpServiceQueryRequest, _ns5__TpServiceQueryResponse *ns5__TpServiceQueryResponse)
{	struct soap *soap = this;
	struct __ns5__TpServiceQuery soap_tmp___ns5__TpServiceQuery;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpServiceQuery?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpServiceQuery.ns5__TpServiceQueryRequest = ns5__TpServiceQueryRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpServiceQuery(soap, &soap_tmp___ns5__TpServiceQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpServiceQuery(soap, &soap_tmp___ns5__TpServiceQuery, "-ns5:TpServiceQuery", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpServiceQuery(soap, &soap_tmp___ns5__TpServiceQuery, "-ns5:TpServiceQuery", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpServiceQueryResponse)
		return soap_closesock(soap);
	ns5__TpServiceQueryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpServiceQueryResponse->soap_get(soap, "ns5:TpServiceQueryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpSetMachineStatus(_ns5__TpSetMachineStatusRequest *ns5__TpSetMachineStatusRequest, _ns5__TpSetMachineStatusResponse *ns5__TpSetMachineStatusResponse)
{	struct soap *soap = this;
	struct __ns5__TpSetMachineStatus soap_tmp___ns5__TpSetMachineStatus;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpSetMachineStatus?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpSetMachineStatus.ns5__TpSetMachineStatusRequest = ns5__TpSetMachineStatusRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpSetMachineStatus(soap, &soap_tmp___ns5__TpSetMachineStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpSetMachineStatus(soap, &soap_tmp___ns5__TpSetMachineStatus, "-ns5:TpSetMachineStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpSetMachineStatus(soap, &soap_tmp___ns5__TpSetMachineStatus, "-ns5:TpSetMachineStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpSetMachineStatusResponse)
		return soap_closesock(soap);
	ns5__TpSetMachineStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpSetMachineStatusResponse->soap_get(soap, "ns5:TpSetMachineStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpSwapNode(_ns5__TpSwapNodeRequest *ns5__TpSwapNodeRequest, _ns5__TpSwapNodeResponse *ns5__TpSwapNodeResponse)
{	struct soap *soap = this;
	struct __ns5__TpSwapNode soap_tmp___ns5__TpSwapNode;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpSwapNode?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpSwapNode.ns5__TpSwapNodeRequest = ns5__TpSwapNodeRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpSwapNode(soap, &soap_tmp___ns5__TpSwapNode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpSwapNode(soap, &soap_tmp___ns5__TpSwapNode, "-ns5:TpSwapNode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpSwapNode(soap, &soap_tmp___ns5__TpSwapNode, "-ns5:TpSwapNode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpSwapNodeResponse)
		return soap_closesock(soap);
	ns5__TpSwapNodeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpSwapNodeResponse->soap_get(soap, "ns5:TpSwapNodeResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpTargetClusterQuery(_ns5__TpTargetClusterQueryRequest *ns5__TpTargetClusterQueryRequest, _ns5__TpTargetClusterQueryResponse *ns5__TpTargetClusterQueryResponse)
{	struct soap *soap = this;
	struct __ns5__TpTargetClusterQuery soap_tmp___ns5__TpTargetClusterQuery;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpTargetClusterQuery?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpTargetClusterQuery.ns5__TpTargetClusterQueryRequest = ns5__TpTargetClusterQueryRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpTargetClusterQuery(soap, &soap_tmp___ns5__TpTargetClusterQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpTargetClusterQuery(soap, &soap_tmp___ns5__TpTargetClusterQuery, "-ns5:TpTargetClusterQuery", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpTargetClusterQuery(soap, &soap_tmp___ns5__TpTargetClusterQuery, "-ns5:TpTargetClusterQuery", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpTargetClusterQueryResponse)
		return soap_closesock(soap);
	ns5__TpTargetClusterQueryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpTargetClusterQueryResponse->soap_get(soap, "ns5:TpTargetClusterQueryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WsTopologyServiceSoapProxy::TpXMLFile(_ns5__TpXMLFileRequest *ns5__TpXMLFileRequest, _ns5__TpXMLFileResponse *ns5__TpXMLFileResponse)
{	struct soap *soap = this;
	struct __ns5__TpXMLFile soap_tmp___ns5__TpXMLFile;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://172.16.99.134:8010/WsTopology?ver_=1.14";
	soap_action = "WsTopology/TpXMLFile?ver_=1.14";
	soap->encodingStyle = NULL;
	soap_tmp___ns5__TpXMLFile.ns5__TpXMLFileRequest = ns5__TpXMLFileRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__TpXMLFile(soap, &soap_tmp___ns5__TpXMLFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__TpXMLFile(soap, &soap_tmp___ns5__TpXMLFile, "-ns5:TpXMLFile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__TpXMLFile(soap, &soap_tmp___ns5__TpXMLFile, "-ns5:TpXMLFile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TpXMLFileResponse)
		return soap_closesock(soap);
	ns5__TpXMLFileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TpXMLFileResponse->soap_get(soap, "ns5:TpXMLFileResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
